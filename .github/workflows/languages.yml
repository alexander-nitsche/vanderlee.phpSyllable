name: Languages

on:
  # Run manually on demand.
  workflow_dispatch:
  push:
  # Run automatically on the first day of the month at midnight.
  schedule:
    - cron: '0 0 1 * *'

jobs:
  update:
    name: 'Update languages'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: 'curl'

      - name: Prepare environment
        run: |
          git config --global user.name "Martijn van der Lee"
          git config --global user.email "martijn@vanderlee.com"
          
          composer dump-autoload --dev

      - name: Checkout new feature branch
        run: |
          git checkout -b "language-update-$(printf '%(%Y-%m-%d-%H-%M-%S)T')"

      - name: Commit updated language files
        id: update-language-files
        run: |
          baseBranch="${{ github.ref_name }}"
          
          WITH_COMMIT=1 ./build/update-language-files
          
          echo "CHANGED_LANGUAGES=$(git rev-list ${baseBranch}..HEAD)" >> $GITHUB_OUTPUT

      - name: Commit patch release (if base branch was released too)
        if: ${{ steps.update-language-files.outputs.CHANGED_LANGUAGES }}
        run: |
          baseBranch="${{ github.ref_name }}"
          baseBranchTag="$(git describe --tags --abbrev=0 ${baseBranch})"
          baseBranchTagLong="$(git describe --tags ${baseBranch})"
          
          if [ "${baseBranchTag}" = "${baseBranchTagLong}" ]; then
            WITH_COMMIT=1 ./build/create-release
          fi

      - name: Merge feature branch into base branch
        if: ${{ steps.update-language-files.outputs.CHANGED_LANGUAGES }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          baseBranch="${{ github.ref_name }}"
          featureBranch="$(git rev-parse --abbrev-ref HEAD)"
          
          git push --set-upstream origin ${featureBranch}
          gh pr create --fill --base ${baseBranch}
          gh pr merge --auto --rebase --delete-branch
